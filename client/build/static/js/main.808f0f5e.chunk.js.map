{"version":3,"sources":["components/TodoItem.tsx","components/AddTodo.tsx","API.ts","App.tsx","index.tsx"],"names":["Todo","todo","updateTodo","deleteTodo","checkTodo","status","className","name","description","onClick","_id","AddTodo","saveTodo","useState","formData","setFormData","handleForm","e","currentTarget","id","value","onSubmit","htmlFor","onChange","type","disabled","undefined","baseUrl","getTodos","a","axios","get","todos","Error","addTodo","post","todoUpdate","put","updatedTodo","delete","deletedTodo","App","setTodos","useEffect","fetchTodos","then","data","catch","err","console","log","handleUpdateTodo","handleDeleteTodo","preventDefault","map","TodoItem","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.808f0f5e.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\ntype Props = TodoProps & {\r\n  updateTodo: (todo: ITodo) => void\r\n  deleteTodo: (_id: string) => void\r\n}\r\n\r\nconst Todo: React.FC<Props> = ({ todo, updateTodo, deleteTodo }) => {\r\n  const checkTodo: string = todo.status ? `line-through` : \"\"\r\n  return (\r\n    <div className=\"Card\">\r\n      <div className=\"Card--text\">\r\n        <h1 className={checkTodo}>{todo.name}</h1>\r\n        <span className={checkTodo}>{todo.description}</span>\r\n      </div>\r\n      <div className=\"Card--button\">\r\n        <button\r\n          onClick={() => updateTodo(todo)}\r\n          className={todo.status ? `hide-button` : \"Card--button__done\"}\r\n        >\r\n          Complete\r\n        </button>\r\n        <button\r\n          onClick={() => deleteTodo(todo._id)}\r\n          className=\"Card--button__delete\"\r\n        >\r\n          Delete\r\n        </button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Todo","import React, { useState } from 'react'\r\n\r\ntype Props = { \r\n  saveTodo: (e: React.FormEvent, formData: ITodo | any) => void \r\n}\r\n\r\nconst AddTodo: React.FC<Props> = ({ saveTodo }) => {\r\n  const [formData, setFormData] = useState<ITodo | {}>()\r\n\r\n  const handleForm = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.currentTarget.id]: e.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <form className='Form' onSubmit={(e) => saveTodo(e, formData)}>\r\n      <div>\r\n        <div>\r\n          <label htmlFor='name'>Name</label>\r\n          <input onChange={handleForm} type='text' id='name' />\r\n        </div>\r\n        <div>\r\n          <label htmlFor='description'>Description</label>\r\n          <input onChange={handleForm} type='text' id='description' />\r\n        </div>\r\n      </div>\r\n      <button disabled={formData === undefined ? true: false} >Add Todo</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddTodo","import axios, { AxiosResponse } from \"axios\"\r\n\r\nconst baseUrl: string = \"http://localhost:5000\"\r\n\r\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\r\n  try {\r\n    const todos: AxiosResponse<ApiDataType> = await axios.get(\r\n      baseUrl + \"/todos\"\r\n    )\r\n    return todos\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport const addTodo = async (\r\n    formData: ITodo\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const todo: Omit<ITodo, \"_id\"> = {\r\n        name: formData.name,\r\n        description: formData.description,\r\n        status: false,\r\n      }\r\n      const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\r\n        baseUrl + \"/add-todo\",\r\n        todo\r\n      )\r\n      return saveTodo\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const updateTodo = async (\r\n    todo: ITodo\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const todoUpdate: Pick<ITodo, \"status\"> = {\r\n        status: true,\r\n      }\r\n      const updatedTodo: AxiosResponse<ApiDataType> = await axios.put(\r\n        `${baseUrl}/edit-todo/${todo._id}`,\r\n        todoUpdate\r\n      )\r\n      return updatedTodo\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }\r\n\r\n  export const deleteTodo = async (\r\n    _id: string\r\n  ): Promise<AxiosResponse<ApiDataType>> => {\r\n    try {\r\n      const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\r\n        `${baseUrl}/delete-todo/${_id}`\r\n      )\r\n      return deletedTodo\r\n    } catch (error) {\r\n      throw new Error(error)\r\n    }\r\n  }","import React, { useEffect, useState } from 'react'\r\nimport TodoItem from './components/TodoItem'\r\nimport AddTodo from './components/AddTodo'\r\nimport { getTodos, addTodo, updateTodo, deleteTodo } from './API'\r\n\r\nconst App: React.FC = () => {\r\n  const [todos, setTodos] = useState<ITodo[]>([])\r\n\r\n  useEffect(() => {\r\n    fetchTodos()\r\n  }, [])\r\n\r\n  const fetchTodos = (): void => {\r\n    getTodos()\r\n    .then(({ data: { todos } }: ITodo[] | any) => setTodos(todos))\r\n    .catch((err: Error) => console.log(err))\r\n  }\r\n\r\n  const handleSaveTodo = (e: React.FormEvent, formData: ITodo): void => {\r\n    e.preventDefault()\r\n    addTodo(formData)\r\n      .then(({ status, data }) => {\r\n        if (status !== 201) {\r\n          throw new Error(\"Error! Todo not saved\")\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  const handleUpdateTodo = (todo: ITodo): void => {\r\n    updateTodo(todo)\r\n      .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error(\"Error! Todo not updated\")\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  \r\n  const handleDeleteTodo = (_id: string): void => {\r\n    deleteTodo(_id)\r\n      .then(({ status, data }) => {\r\n        if (status !== 200) {\r\n          throw new Error(\"Error! Todo not deleted\")\r\n        }\r\n        setTodos(data.todos)\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n\r\n  return (\r\n    <main className='App'>\r\n      <h1>My Todos</h1>\r\n      <AddTodo saveTodo={handleSaveTodo} />\r\n      {todos.map((todo: ITodo) => (\r\n        <TodoItem\r\n          key={todo._id}\r\n          updateTodo={handleUpdateTodo}\r\n          deleteTodo={handleDeleteTodo}\r\n          todo={todo}\r\n        />\r\n      ))}\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default App","import App from './App';\nimport './API';\nimport './index.css';\n\nimport ReactDOM from 'react-dom'\nReactDOM.render(<App />,document.querySelector('#root'))"],"sourceRoot":""}